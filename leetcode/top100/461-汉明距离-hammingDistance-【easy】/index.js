/*
 * @Author: xxx
 * @Date: 2020-12-27 22:20:37
 * @LastEditors: xxx
 * @LastEditTime: 2020-12-27 22:33:42
 * @Description: 文件功能描述
 */

// 两个整数之间的汉明距离指的是这两个数字对应二进制位不同的位置的数目。
// 给出两个整数 x 和 y，计算它们之间的汉明距离。
// 注意：
// 0 ≤ x, y < 231.
// 示例:
// 输入: x = 1, y = 4
// 输出: 2
// 解释:
// 1   (0 0 0 1)
// 4   (0 1 0 0)
//        ↑   ↑

// 上面的箭头指出了对应二进制位不同的位置
// 前置知识 : 
// & ：按二进制位进行 与运算，相同位同时为 1 时结果为 1，否则为 0
// | : 按二进制位进行 或运算，相同位有一个为 1 时结果为 1，否则为 0
// ^ : 按二进制位进行 异或运算，相同位相同时结果为 0，否则为 1
// >> : 右移运算是将一个二进制位的操作数按指定移动的位数向右移动，移出位被丢弃，左边移出的空位或者一律补 0
// << : 左移运算是将一个二进制位的操作数按指定移动的位数向左移位，移出位被丢弃，右边的空位一律补 0
// 思路其实很简单，如下：

// 遍历两个数值，位数不相同那么 +1

var hammingDistance = function(x, y) {
    let count = 0
    while(x !== 0 || y !== 0){
        if((x & 1) !== (y & 1)){
            count++
        }
        x >>= 1
        y >>= 1
    }
    return count
};

